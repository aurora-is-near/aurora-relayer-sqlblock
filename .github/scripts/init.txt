DROP DOMAIN IF EXISTS address CASCADE;
CREATE DOMAIN address AS bytea
  CHECK (length(value) = 20);

DROP DOMAIN IF EXISTS blockno CASCADE;
CREATE DOMAIN blockno AS int8
  CHECK (value >= 0);

DROP DOMAIN IF EXISTS chainid CASCADE;
CREATE DOMAIN chainid AS int4
  CHECK (value >= 1);

DROP DOMAIN IF EXISTS hash CASCADE;
CREATE DOMAIN hash AS bytea
  CHECK (length(value) = 32);

DROP DOMAIN IF EXISTS instant CASCADE;
CREATE DOMAIN instant AS timestamptz
  CHECK (value = timestamptz '1970-01-01T00:00:00Z' OR value > timestamptz '2015-07-30T00:00:00Z');

DROP DOMAIN IF EXISTS u64 CASCADE;
CREATE DOMAIN u64 AS numeric(20, 0)
  CHECK (value >= 0 AND value <= 18446744073709551615);

DROP DOMAIN IF EXISTS u256 CASCADE;
CREATE DOMAIN u256 AS numeric(78, 0)
  CHECK (value >= 0 AND value <= 115792089237316195423570985008687907853269984665640564039457584007913129639935);
DROP TYPE IF EXISTS block_result CASCADE;

DROP TABLE IF EXISTS block CASCADE;
CREATE TABLE block (
  chain             chainid NOT NULL,
  id                blockno NOT NULL PRIMARY KEY,
  hash              hash NOT NULL UNIQUE,
  near_hash         hash NULL UNIQUE,
  timestamp         instant NULL, -- NULL for unknown (pre-HF)
  size              int4 NOT NULL,
  gas_limit         u256 NOT NULL,
  gas_used          u256 NOT NULL CHECK (gas_used <= gas_limit),
  parent_hash       hash NOT NULL UNIQUE,
  transactions_root hash NOT NULL,
  state_root        hash NOT NULL,
  receipts_root     hash NOT NULL,
  logs_bloom        bytea,
  miner             address,
  author            varchar(255),
  sequence          int8 NOT NULL
);

DROP TABLE IF EXISTS transaction CASCADE;
CREATE TABLE transaction (
  block                     blockno NOT NULL REFERENCES block ON DELETE CASCADE,
  block_hash                hash NOT NULL,
  index                     int NOT NULL CHECK (index >= 0),
  id                        bigserial NOT NULL PRIMARY KEY,
  hash                      hash NOT NULL UNIQUE,
  near_hash                 hash NOT NULL,
  near_receipt_hash         hash NULL,
  "from"                    address NOT NULL,
  "to"                      address NULL,
  nonce                     u256 NOT NULL,
  gas_price                 u256 NOT NULL,
  gas_limit                 u256 NOT NULL,
  gas_used                  u256 NOT NULL, -- FIXME: CHECK (gas_used <= gas_limit),
  value                     u256 NOT NULL,
  input                     bytea NULL CHECK (length(input) > 0),
  v                         u64 NULL,
  r                         u256 NULL,
  s                         u256 NULL,
  status                    boolean NOT NULL,
  output                    bytea NULL CHECK (length(output) > 0),
  access_list               json NULL,
  max_fee_per_gas           u256 NULL,
  max_priority_fee_per_gas  u256 NULL,
  type                      int NOT NULL,
  contract_address          address NULL,
  logs_bloom                bytea NULL
);

DROP TABLE IF EXISTS event CASCADE;
CREATE TABLE event (
  transaction       bigint NOT NULL REFERENCES transaction ON DELETE CASCADE,
  block             blockno NOT NULL,
  block_hash        hash NOT NULL,
  transaction_index int NOT NULL CHECK (index >= 0),
  transaction_hash  hash NOT NULL,
  index             int NOT NULL CHECK (index >= 0),
  id                bigserial NOT NULL PRIMARY KEY,
  data              bytea NULL CHECK (length(data) > 0),
  "from"            address NULL,
  topics            hash[] NULL CHECK (array_length(topics, 1) > 0 AND array_length(topics, 1) <= 4)
);
